#!/bin/sh 

# support api for lua/luci layer

. /lib/xqwhc/xqwhc_public.sh
. /lib/xqwhc/xqwhc_init.sh
. /lib/xqwhc/xqwhc_hyt.sh
. /lib/xqwhc/xqwhc_stat.sh

export ERR_METHOD_NOSUPPORT=255

# 1. add lock to insure thread-safe
LOCKF="/var/lock/xqwhc.lock"
LOCKF_INIT="/var/lock/xqwhc_initting.lock"
WHC_LOCK()
{
    lock "$LOCKF"
}

WHC_UNLOCK()
{
    lock -u "$LOCKF"
}


# 2. compose return msg to caller
export code=0
export message="\"ok\""
export whc_res=""

whc_ret()
{
    whc_res="{\"code\":$code, \"message\":$message}"
    echo -n "$whc_res"
}

# 3. parse method and params from buff
# buff="{\"method\":\"init\",\"params\":{\"whc_role\":\"CAP\",\"whc_ssid\":\"!@Mi-son\",\"whc_pswd\":\"123456789\",\"whc_mgmt\":\"mixed-psk\"}}"
# buff="{\"method\":\"init\",\"params\":{\"whc_role\":\"RE\",\"whc_ssid\":\"!@Mi-son\",\"whc_pswd\":\"123456789\",\"whc_mgmt\":\"mixed-psk\"}}"
# buff="{\"method\":\"init\",\"params\":{\"whc_role\":\"CAP\",\"bsd\":\"0\",\"ssid_2g\":\"!@Mi-son\",\"mgmt_2g\":\"mixed-psk\",\"pswd_2g\":\"123456789\",\"ssid_5g\":\"!@Mi-son\",\"mgmt_5g\":\"mixed-psk\",\"pswd_5g\":\"123456789\"}}"
# buff="{\"method\":\"get_status\",\"params\":{}}"
# buff="{\"method\":\"get_topology\",\"params\":{}}"
# buff="{\"method\":\"delete\",\"params\":{}}"
buff="$1"
WHC_LOGD " whc_ual @$buff"
export method="$(json_get_value "$buff" method)"
export params="$(json_get_value "$buff" params)"



trap "WHC_UNLOCK; lock -u "$LOCKF_INIT"; exit 1" SIGINT SIGHUP SIGTERM SIGKILL SIGSEGV

#4. dispatch
WHC_LOCK
case "$method" in
    init)
        #gpio_led l green 600 600 &
        WHC_LOGI "*init with $params"
        lock "$LOCKF_INIT"
        xqwhc_init "$params"
        code=$?
        whc_ret
        lock -u "$LOCKF_INIT"
        WHC_LOGI "*init done"
        ;;

    # call postinit to confirm app init ok!
    postinit)
        WHC_LOGI "*postinit"
        lock "$LOCKF_INIT"
        xqwhc_postinit
        code=$?
        whc_ret
        lock -u "$LOCKF_INIT"
        WHC_LOGI "*postinit done"
        ;;

    delete)
        WHC_LOGI "*delete"
        lock "$LOCKF_INIT"
        xqwhc_delete "$params"
        code=$?
        whc_ret
        lock -u "$LOCKF_INIT"
        WHC_LOGI " handle $method res=$whc_res"
        ;;

    get_status)
        xqwhc_get_self_status "$params"
        code=$?
        whc_ret
        WHC_LOGI " handle $method res=$whc_res"
        ;;
 
    get_topology)
        xqwhc_get_topology "$params"
        code=$?
        whc_ret
        WHC_LOGI " handle $method res=$whc_res"
        ;;

    *)
        code=$ERR_METHOD_NOSUPPORT
        message="\" error, method $method not support\""
        whc_ret
    ;;
esac

WHC_UNLOCK
return $code

