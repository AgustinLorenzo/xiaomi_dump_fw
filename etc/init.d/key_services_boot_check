#!/bin/sh /etc/rc.common

#this script will run by /etc/init.d/rcS after all rc script.
START=51
#STOP=99

#
#reboot if REBOOTFLAGFILE set to REBOOT=1, by another script
REBOOTFLAGFILE='/tmp/needreboot.stat'

#/etc/init.d/rcS will save all /etc/rc.d/S* exitcode into this file
RCSTATFILE='/tmp/rc.timing'

SKIPLIST='boot_check'

xiaoqiang_factory=`cat /proc/xiaoqiang/ft_mode`
wl0_radio=`nvram get wl0_radio`
wl1_radio=`nvram get wl1_radio`
if [ "$xiaoqiang_factory" = "1" ] && [ "$wl0_radio" != "1" ] && [ "$wl1_radio" != "1" ]; then
	KEYSRVLIST='boot messagingagent.sh dnsmasq sysapihttpd'
else
	KEYSRVLIST='boot messagingagent.sh dnsmasq network sysapihttpd'
fi

elog() {
	tmsg="$@"
	logger -p local0.warning -t boot_check "boot_check[${$}]: $tmsg"
	echo "`date` boot_check[${$}]: $tmsg" >> /dev/console
}

reboot_try() {
    elog "@@@@@@@@R3600-debug, skip key_service_check fail reboot!"
	ft_mode=`cat /proc/xiaoqiang/ft_mode`
	if [ "$ft_mode" = "1" ]
	then
		elog "INFO: key_services_boot_check failed $ft_ret"
		dmesg > /data/usr/log/dmesg.log
		#red led is set
		gpio 1 0
		gpio 2 1
		gpio 3 1
	else
		reboot -f
		exit 124
	fi
}

failed_flag() {
	local system_current=$(nvram get flag_boot_rootfs)
	system_current=${system_current:-0}
	nvram set flag_try_sys$(($system_current+1))_failed=1

	# save log to crash partition
	cd /tmp
	gzip messages
	mtd_crash_log -f messages.gz

	nvram set flag_ota_reboot=0
	nvram set flag_recover_config=1
	nvram commit
}

start() {
	#
	#check /etc/rc.d/S* exitcode
	#

	errcnt=0
	touch /tmp/$$.bootcheck.log
	cat $RCSTATFILE 2>/dev/null | grep 'EXITCODE=' | grep -v 'EXITCODE=0;' > /tmp/$$.bootcheck.log
	while read oneline; do
		#EXITCODE=0;ESP=0;LIMIT=10;CMD=/etc/rc.d/S99datacenter;ARG=boot;
		match=0
		for onesrv in $SKIPLIST; do
			echo "$oneline" | grep -q "[0-9]\{1,100\}$onesrv;" && match=1 && break
		done
		[ $match -ne 0 ] && continue

		match=0
		for onesrv in $KEYSRVLIST; do
			echo "$oneline" | grep -q "[0-9]\{1,100\}$onesrv;" && match=1 && break
		done
		if [ $match -ne 0 ]; then
			let errcnt=$errcnt+1
			elog "ERROR: KEY SERVICE FAILED: $oneline"
		else
			logger -p local0.warning -t boot_check "WARNING: SERVICE FAILED: $oneline"
		fi
	done < /tmp/$$.bootcheck.log

	if [ $errcnt -ne 0 ]; then
		#
		elog "ERROR: $errcnt KEY SERVICE FAILED."
		elog "Try rebooting system to recover."
		#
		failed_flag
		reboot_try
	fi

	# 检查 wifi是否正常
	ft_mode=`cat /proc/xiaoqiang/ft_mode`
	ft_ret=0
	echo "@@@@@@ R3600 key_service_check skip wireless! " || {	
		wifi_count=`cat /proc/net/dev | grep wifi | wc -l`
		if [ $wifi_count -ge 2 ]; then
			elog "INFO: Wireless OK"
			nvram set wl_retry_count=0
		else
			elog "WARNING: no wireless device available"
			# add statpoint if wifi radio boot fail
			wifi0_count=`cat /proc/net/dev | grep -w "wifi0" | wc -l`
			wifi1_count=`cat /proc/net/dev | grep -w "wifi1" | wc -l`
			[ $wifi0_count -eq 0 ] && {
				elog "========== R3600 2.4G not found ."
				logger "stat_points_none radio_boot_failed=2.4G|insmod"
			}
			[ $wifi1_count -eq 0 ] && {
				elog "========== R3600 5G not found ."
				logger "stat_points_none radio_boot_failed=5G|insmod"
			}
			wl_retry=`nvram get wl_retry_count`
			if [ "$wl_retry" = "1" ] ; then
				nvram set wl_retry_count=0
				failed_flag
				reboot_try
			else
				nvram set wl_retry_count=1
				nvram set restore_defaults=2
				nvram commit
				reboot_try
			fi
		fi
	}

	# 检查eth0 是否存在
	cat /proc/net/dev | grep -q "eth0" > /dev/null
	[ $? -ne 0 ] && {
		elog "WARNING: no network device eth0 available, current system /dev/$hdd"
		failed_flag
		reboot_try
	}

	# system is okay
	echo 3 > /proc/xiaoqiang/boot_status
}

stop() {
	echo "stop"
}
