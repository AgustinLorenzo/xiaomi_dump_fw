user root root;
worker_processes  1;

error_log  /dev/null;
#error_log /tmp/nginx_error.log  error;

pid	/tmp/nginx.pid;

events {
	use epoll;
	worker_connections  256;
}

http {
	include       mime.types;
	
	access_log  off;
	# format access log
	#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	#                  '$status $body_bytes_sent "$http_referer" '
	#                  '"$http_user_agent" "$http_x_forwarded_for"';
	
	sendfile        on;
	keepalive_timeout  65;

	server {
		listen       80;
		listen       8098;   #web init redirect port
		server_name  localhost;
		charset UTF-8;

		#access_log  /tmp/nginx_access_80.log  main;
		#error_log   /tmp/nginx_error_80.log debug;

		root   /www;
		index index.html index.htm;

		#disable proxy errors handle
		proxy_intercept_errors off;

		reset_timedout_connection on;
		expires epoch;

		#重定向配置文件
		include 'miwifi-webinitrd.conf';
		#
		location /backup/log/ {
			alias /tmp/syslogbackup/;
		}

		location ~* /cgi-bin/luci.* {
			root /www;
			fastcgi_pass  127.0.0.1:8920;
			fastcgi_index /cgi-bin/luci;

			fastcgi_split_path_info  (/cgi-bin/luci)(.*)$;
			fastcgi_param PATH_INFO $fastcgi_path_info;
			fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;
			include fastcgi_params;
		}

		location /api/service/plugin {
			rewrite ^/api/service/plugin/control /api-third-party/download/private/$arg_appid/control.html? permanent;
		}
		location /api-third-party/download/public/ {
			alias /userdisk/data/;
		}
		location /api-third-party/download/private/ {
			alias /userdisk/appdata/;
		}

		location /api-third-party/service {
			add_header MiCGI-Switch "$finalvar";
			add_header  MiCGI-Client-Ip $remote_addr;
			add_header  MiCGI-Host $host;
			add_header  MiCGI-Http-Host $http_host;
			add_header  MiCGI-Server-Ip $server_addr;
			add_header  MiCGI-Server-Port $server_port;
			add_header  MiCGI-Status CGI;
			add_header  MiCGI-Preload no;
			#
			include 'fastcgi-proxy-tcp.conf';
			#
		}

		# for upload_rom
		location ^~ /uploadfile/cgi-bin {
		    add_header MiCGI-Switch "$finalvar";
		    add_header  MiCGI-Client-Ip $remote_addr;
		    add_header  MiCGI-Host $host;
		    add_header  MiCGI-Http-Host $http_host;
		    add_header  MiCGI-Server-Ip $server_addr;
		    add_header  MiCGI-Server-Port $server_port;
		    add_header  MiCGI-Status CGI;
		    add_header  MiCGI-Preload no;
		    add_header  MiCGI-Upload-File yes;
		    # for upload roms only [start]
		    client_body_temp_path /tmp/uploadfiles/;
		    client_body_in_file_only clean;
		    client_body_buffer_size 16k;
		    proxy_pass_request_headers on;
		    proxy_set_body off;
		    proxy_redirect off;
		    fastcgi_param  UPLOADFILE $request_body_file;
		    client_max_body_size 40M;
		    #TODO: upload_multipart_cut
		    #upload_multipart_cut on;
		    fastcgi_max_temp_file_size 0;
		    # for upload rom only [end]
		    #
		    include 'fastcgi-proxy-tcp.conf';
		    #
		}
	}


	# xiaoqiang nginx config not use
	server {
		listen       8080;
		server_name  localhost;
		#access_log  logs/host.access.log  main;
		root /www;
		index index.html index.htm;

		#disable proxy errors handle
		proxy_intercept_errors off;
		reset_timedout_connection on;
		expires epoch;

		# luci config
		location /cgi-bin/upload {
			internal;
			include 'fastcgi-proxy-tcp.conf';
		}
		location /cgi-bin {
			#
			#add_header MiCGI-Switch "$finalvar";
			add_header  MiCGI-Client-Ip $remote_addr;
			add_header  MiCGI-Host $host;
			add_header  MiCGI-Http-Host $http_host;
			add_header  MiCGI-Server-Ip $server_addr;
			add_header  MiCGI-Server-Port $server_port;
			add_header  MiCGI-Status CGI;
			add_header  MiCGI-Preload no;
			#
			include 'fastcgi-proxy-tcp.conf';
			#
		}

		#error_page  404              /404.html;
		# redirect server error pages to the static page /50x.html
		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root   html;
		}
	}

	# for guest portal, set a sepcial server for portal page's link.
	server {
		listen 8999 default_server;
		server_name  _;
		access_log  off;
		resolver 127.0.0.1 valid=30s;
		location / {
			if ($request_method != GET) {
				return 405;
			}
			return 302 http://guest.miwifi.com:8999/wifishare.html;
		}
	}

	server {
		listen 8999;
		server_name  miwifi.com *.miwifi.com *.xiaomi.net *.xiaomi.com *.mi.com;
		access_log  off;
		resolver 127.0.0.1 valid=30s;

		location / {
			if ($host = localhost) {
				return 403;
			}
			proxy_pass $scheme://$host$request_uri;
			proxy_set_header X-Forwarded-For $remote_addr;
		}

		location /wifishare.html {
			root /etc/nginx/htdocs/;
			try_files /wifishare.html =404;
		}

		# for portal page polling access status
		location /cgi-bin/luci/api/misns/authorization_status {
			proxy_pass http://miwifi.com$request_uri;
			proxy_set_header X-Forwarded-For $remote_addr;
		}

		location /cgi-bin/luci/api/misns/sns_init {
			proxy_pass http://miwifi.com$request_uri;
			proxy_set_header X-Forwarded-For $remote_addr;
		}

		location /cgi-bin/luci/api/misns/prepare {
			proxy_pass http://miwifi.com$request_uri;
			proxy_set_header X-Forwarded-For $remote_addr;
		}

		location /cgi-bin/luci/api/misns/ios_ready {
			proxy_pass http://miwifi.com$request_uri;
			proxy_set_header X-Forwarded-For $remote_addr;
		}

		location /cgi-bin/luci {
			deny  all;
		}
	}

	server {
		listen 443 ssl;
		server_name miwifi.com www.miwifi.com;
		ssl on;
		ssl_certificate      cert.crt;
		ssl_certificate_key  cert.key;

		ssl_session_cache    shared:SSL:1m;
		ssl_session_timeout  5m;

		ssl_ciphers  HIGH:!aNULL:!MD5;
		ssl_prefer_server_ciphers  on;

		access_log  off; #/tmp/nginx_access.log main;
		error_log   /dev/null; #/tmp/nginx_error_443.log debug;
			
		#
		keepalive_timeout  0;

		#set the send_timeout as 60 minutes
		send_timeout 60m;
		#
		root /www;
		index index.html index.htm;

		# 0.0.0.1:65535 no avaible
		#redirect 0.0.0.1:65535 127.0.0.1:5081;

		#disable proxy errors handle
		proxy_intercept_errors off;

		#http://wiki.nginx.org/HttpCoreModule#reset_timedout_connection
		reset_timedout_connection on;

		expires epoch;

		#重定向配置文件
		include 'miwifi-webinitrd-https.conf';
		#
		location ~* /cgi-bin/luci.* {
			root /www;
			fastcgi_pass  127.0.0.1:8920;
			fastcgi_index /cgi-bin/luci;

			fastcgi_split_path_info  (/cgi-bin/luci)(.*)$;
			fastcgi_param PATH_INFO $fastcgi_path_info;
			fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;
			include fastcgi_params;
		}

		location /api/service/plugin {
			rewrite ^/api/service/plugin/control /api-third-party/download/private/$arg_appid/control.html? permanent;
		}
		location /api-third-party/download/public/ {
			alias /userdisk/data/;
		}
		location /api-third-party/download/private/ {
			alias /userdisk/appdata/;
		}

		location /api-third-party/service {
			add_header MiCGI-Switch "$finalvar";
			add_header  MiCGI-Client-Ip $remote_addr;
			add_header  MiCGI-Host $host;
			add_header  MiCGI-Http-Host $http_host;
			add_header  MiCGI-Server-Ip $server_addr;
			add_header  MiCGI-Server-Port $server_port;
			add_header  MiCGI-Status CGI;
			add_header  MiCGI-Preload no;
			#
			include 'fastcgi-proxy-tcp.conf';
			#
		}

		# for upload_rom
		location ^~ /uploadfile/cgi-bin {
		    add_header MiCGI-Switch "$finalvar";
		    add_header  MiCGI-Client-Ip $remote_addr;
		    add_header  MiCGI-Host $host;
		    add_header  MiCGI-Http-Host $http_host;
		    add_header  MiCGI-Server-Ip $server_addr;
		    add_header  MiCGI-Server-Port $server_port;
		    add_header  MiCGI-Status CGI;
		    add_header  MiCGI-Preload no;
		    add_header  MiCGI-Upload-File yes;
		    # for upload roms only [start]
		    client_body_temp_path /tmp/uploadfiles/;
		    client_body_in_file_only clean;
		    client_body_buffer_size 16k;
		    proxy_pass_request_headers on;
		    proxy_set_body off;
		    proxy_redirect off;
		    fastcgi_param  UPLOADFILE $request_body_file;
		    client_max_body_size 40M;
		    #TODO: upload_multipart_cut
		    #upload_multipart_cut on;
		    fastcgi_max_temp_file_size 0;
		    # for upload rom only [end]
		    #
		    include 'fastcgi-proxy-tcp.conf';
		    #
		}
	}
}
